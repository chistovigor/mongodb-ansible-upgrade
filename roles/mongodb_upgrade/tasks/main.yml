---
- name: Verify replica set status
  community.mongodb.mongodb_replicaset_info:
    login_user: "{{ mongodb_admin_user }}"
    login_password: "{{ vault_mongodb_admin_password }}"
    login_host: "{{ inventory_hostname }}"
  register: rs_status
  delegate_to: localhost

- name: Step down primary if this is the first node
  community.mongodb.mongodb_replicaset_primary_stepdown:
    login_user: "{{ mongodb_admin_user }}"
    login_password: "{{ vault_mongodb_admin_password }}"
    login_host: "{{ item }}"
    stepdown_seconds: 3600
  when:
    - upgrade_priority.secondary_first
    - inventory_hostname == rs_status.primary
  delegate_to: localhost
  loop: "{{ groups['mongodb_servers'] }}"

- name: Stop MongoDB service
  ansible.builtin.service:
    name: "{{ mongodb_service_name }}"
    state: stopped

- name: Install new version
  apt:
    name: "{{ mongodb_package_name }}={{ target_version }}"
    state: present
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: Start MongoDB service
  ansible.builtin.service:
    name: "{{ mongodb_service_name }}"
    state: started
    enabled: yes

- name: Wait for node to rejoin replica set
  community.mongodb.mongodb_replicaset_info:
    login_user: "{{ mongodb_admin_user }}"
    login_password: "{{ vault_mongodb_admin_password }}"
    login_host: "{{ inventory_hostname }}"
  register: rs_info
  until: rs_info.ismaster
  retries: 12
  delay: 10
  delegate_to: localhost
